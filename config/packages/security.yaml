security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~  # LexikJWT gère l'authentification avec les tokens JWT

        main:
            lazy: true
            provider: app_user_provider
            entry_point: App\Security\LoginFormAuthenticator
            form_login:
                login_path: api_login
                check_path: api_login
            logout:
                path: app_logout
                target: home
            access_denied_url: api_login
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
                - App\Security\ApiAuthenticator

    access_control:
        # Autorise l'accès à /api/login sans authentification
        - { path: ^/api/login, roles: PUBLIC_ACCESS }

        # Autorise les requêtes OPTIONS sans auth (important pour CORS)
        - { path: ^/api, methods: [OPTIONS], roles: PUBLIC_ACCESS }

        # Toutes les autres routes API nécessitent une authentification
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

        # Contrôle d'accès pour d'autres rôles
        - { path: ^/rp, roles: ROLE_RP }
        - { path: ^/rt, roles: ROLE_RT }
        - { path: ^/admin, roles: ROLE_ADMIN }
